name: AstroJS Deployment to Pinata

on:
  push:
    branches: [ master ]  # Assuming 'main' is the default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install AstroJS dependencies
        run: yarn install

      - name: Build AstroJS website
        run: yarn build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: astrojs-website
          path: dist

      - name: Enable workflow (manually)
        if: github.event_name == 'push'
        run: echo "Enabling workflow..."

      - name: Deploy AstroJS website
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.4
        with:
          pin-name: 'deploy-portfolio'
          path: './dist'
          pinata-api-key: 16e31d64b28de64fbcfb
          pinata-secret-api-key: 8c1aa97b108ca5bf22bc30950478d5ea07df4c9f67fc73289a066fc2573ba1dd
          verbose: true
          remove-old: true

      - name: Deploy status
        run: |
          const { request } = require('@octokit/request');
          const data = {
            state: 'success',
            description: 'AstroJS website deployed successfully to Pinata Cloud.',
            context: 'deployment',
          };

          request('POST /repos/{owner}/{repo}/statuses/{sha}', {
            owner: process.env.GITHUB_REPOSITORY.split('/')[0],
            repo: process.env.GITHUB_REPOSITORY.split('/')[1],
            sha: process.env.GITHUB_SHA,
            ...data,
            headers: {
              authorization: `token ${process.env.GITHUB_TOKEN}`,
            },
          })
            .then(res => {
              if (res.status === 201) {
                console.log('Successfully updated deploy status.');
              } else {
                throw new Error(`Failed to update deploy status: ${res.status}`);
              }
            })
            .catch(error => {
              console.error(error);
            });

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
